# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
networks:
  4createApp:

services:
  appdb:
    container_name: appdb
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
    - ACCEPT_EULA=Y
    - MSSQL_SA_PASSWORD=password123sdJwnwlk!
    # - MSSQL_COLLATION=SQL_Latin1_General_CP1_CI_AS
    - MSSQL_PID=Developer
    - MSSQL_TCP_PORT=1433
    ports:
    - 1433:1433
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${Sa_Password:-password123sdJwnwlk!} -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    networks:
    - 4createApp
  server:
    container_name: api
    build:
      context: .
      target: final
    ports:
      - 8080:8080
    expose:
      - 5432
    networks:
      - 4createApp
    environment:
      - APP_HOST=DOCKER
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=FALSE
      # - DockerConnectionString=Data Source=appdb;Initial Catalog=4CreateDatabase;User ID=sa;Password=password123sdJwnwlk!;Encrypt=False;MultipleActiveResultSets=True;MultiSubnetFailover=True;
      # - LocalConnectionString=Data Source=appdb;Initial Catalog=4CreateDatabase;User ID=sa;Password=password123sdJwnwlk!;Encrypt=False;MultipleActiveResultSets=True;MultiSubnetFailover=True;

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

